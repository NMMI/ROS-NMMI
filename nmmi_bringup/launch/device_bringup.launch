<launch>
  <!-- FIXME: cannot pass arguments with 'pass_all_args' flag which are not used in the included launch file. This explode with nested includes. Refer to kinetic 05-04-2018 (wait for fix ros_comm#889: https://github.com/ros/ros_comm/issues/889) -->
  <!-- FIXME: unused args [standalone, use_controller_gui, robot_package, use_waypoints, use_rviz, source_list] -->
  <arg name="standalone" doc="Fake arg: ros_comm#889"/>
  <arg name="use_controller_gui" doc="Fake arg: ros_comm#889"/>
  <arg name="robot_package" doc="Fake arg: ros_comm#889"/>
  <arg name="use_waypoints" doc="Fake arg: ros_comm#889"/>
  <arg name="use_rviz" doc="Fake arg: ros_comm#889"/>
  <arg name="source_list" doc="Fake arg: ros_comm#889"/>
  <arg name="control_duration" doc="Fake arg: ros_comm#889"/>
  <arg name="robot_hardware" doc="Fake arg: ros_comm#889"/>


  <!-- device info -->
  <arg name="device_id" doc="The ID of the device [1, 128]."/>
  <arg name="device_name" doc="The unique device name used in the yaml controller configurations."/>
  <arg name="device_type" doc="The type of the device [qbhand, qbmove, ...]."/>
  <!-- read/write settings -->
  <arg name="get_currents" default="true" doc="Choose whether or not to retrieve current measurements from the device."/>
  <arg name="get_positions" default="true" doc="Choose whether or not to retrieve position measurements from the device."/>
  <arg name="get_distinct_packages" default="false" doc="Choose whether or not to retrieve current and position measurements from the device in two distinct packages."/>
  <arg name="get_imu_values" default="false" doc="Choose whether or not to retrieve IMU measurements from the device."/>
  <arg name="compute_quaternions_node" default="false" doc="Choose whether or not to compute quaternions in ROS node."/>
  <arg name="compute_angles" default="false" doc="Choose whether or not to compute angles from quaternions."/>
  <arg name="get_adc_raw_values" default="false" doc="Choose whether or not to retrieve ADC raw measurements from the device."/>
  <arg name="get_encoder_raw_values" default="false" doc="Choose whether or not to retrieve encoders raw measurements from the device."/>
  <arg name="max_repeats" default="3" doc="The maximum number of consecutive repetitions to mark retrieved data as corrupted."/>
  <arg name="set_commands" default="true" doc="Choose whether or not to send command positions to the device."/>
  <arg name="set_commands_async" default="false" doc="Choose whether or not to send commands without waiting for ack."/>
  <!-- initialization settings -->
  <arg name="activate_on_initialization" default="false" doc="Choose whether or not to activate the motors on node startup."/>
  <arg name="rescan_on_initialization" default="false" doc="Choose whether or not to rescan the serial ports on node startup."/>
  <!-- robot settings -->
  <arg name="robot_name" default="$(arg device_name)" doc="The unique robot name."/>
  <arg name="robot_namespace" default="$(arg robot_name)" doc="The unique robot namespace."/>

  <group ns="$(arg robot_namespace)">
    <!-- bring up the controllers -->
    <group ns="control" if="$(eval device_type != 'imu' and device_type != 'generic')">
      <include file="$(find qb_device_bringup)/launch/device_controllers_bringup.launch">
        <arg name="device_name" value="$(arg device_name)"/>
        <arg name="device_type" value="$(arg device_type)"/>
      </include>
    </group>

    <group ns="control" if="$(eval device_type == 'SoftHandPro')">
      <include file="$(find nmmi_bringup)/launch/device_controllers_bringup.launch">
        <arg name="device_name" value="$(arg device_name)"/>
        <arg name="device_type" value="$(arg device_type)"/>
      </include>
    </group>

    <!-- load parameters -->
    <group ns="$(arg device_name)">
      <!-- device info -->
      <param name="device_id" type="int" value="$(arg device_id)"/>
      <param name="device_name" type="str" value="$(arg device_name)"/>
      <param name="type" type="str" value="qb_hand_hardware_interface/qbHandHW" if="$(eval device_type == 'qbhand')"/>
      <param name="type" type="str" value="qb_move_hardware_interface/qbMoveHW" if="$(eval device_type == 'qbmove')"/>
      <param name="type" type="str" value="SoftHandPro_hardware_interface/SoftHandProHW" if="$(eval device_type == 'SoftHandPro')"/>   
      <param name="type" type="str" value="imu_hardware_interface/IMUHW" if="$(eval device_type == 'imu')"/>           
      <param name="type" type="str" value="generic_fw_hardware_interface/GenericFWHW" if="$(eval device_type == 'generic')"/>
      <!-- read/write settings -->
      <param name="get_currents" type="bool" value="$(arg get_currents)"/>
      <param name="get_positions" type="bool" value="$(arg get_positions)"/>
      <param name="get_distinct_packages" type="bool" value="$(arg get_distinct_packages)"/>
      <param name="get_imu_values" type="bool" value="$(arg get_imu_values)" if="$(eval device_type == 'imu')"/>
      <param name="compute_quaternions_node" value="$(arg compute_quaternions_node)" if="$(eval device_type == 'imu')"/>
      <param name="compute_angles" type="bool" value="$(arg compute_angles)" if="$(eval device_type == 'imu')"/>
      <param name="get_adc_raw_values" type="bool" value="$(arg get_adc_raw_values)" if="$(eval device_type == 'generic')"/>
      <param name="get_encoder_raw_values" type="bool" value="$(arg get_encoder_raw_values)" if="$(eval device_type == 'generic')"/>   
      <param name="max_repeats" type="int" value="$(arg max_repeats)"/>
      <param name="set_commands" type="bool" value="$(arg set_commands)"/>
      <param name="set_commands_async" type="bool" value="$(arg set_commands_async)"/>
      <!-- initialization settings -->
      <param name="activate_on_initialization" type="bool" value="$(arg activate_on_initialization)"/>
      <param name="rescan_on_initialization" type="bool" value="$(arg rescan_on_initialization)"/>
    </group>
  </group>
</launch>